@model ElectricalAppliancesStore.Models.ProductView
@{
    Layout = "~/Views/Shared/Customers.cshtml";
    ViewBag.Title = "ProductView";
}

<script src="~/Scripts/bootstrap.min.js"></script>

<div class="container">
    <div class="container col-sm-2">
        <h2 style="margin-left: 15px;">Products</h2>
    </div>

    <div class="container col-sm-8" style="margin-top:20px;float:left;">
        @*<div class="zoomGlass">
                <input name="search" id="search" type="search" placeholder="Search">
                <div class="zoomStick">/</div>
            </div>*@
        <div class="container">
            <div class="dropdown">
                <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
                    Filter By Category
                    <span class="caret"></span>
                </button>
                <ul id="drop1" class="dropdown-menu"></ul>
            </div>
        </div>
    </div>
    <div class="container col-sm-2" style="margin-top:20px;float:left;">
        @Html.ActionLink("Advanced Search >>", "ProductsByCategoryBrandAndMaxPrice", "Products", new { @class = "btn btn-info my-2 my-sm-0", @id = "advSearchLink" })
    </div>
</div>
<div>
    <table>
        <tr>
            <td>
                <label class="th-manger-page">Max Price </label>
                <br />
                <input type="text" id="max_price" onkeyup="advOnIndexCall()" />
            </td>
            <td>
                <label class="th-manger-page">Category </label>
                <br />
                <select id="categories" class="dropdown-menu" onchange="advOnIndexCall()" style="display: inline-block;position: inherit;"></select>
            </td>
            <td>
                <label class="th-manger-page">Brand </label>
                <br />
                <select id="brands" class="dropdown-menu" onchange="advOnIndexCall()" style="display: inline-block;position: inherit;"></select>
            </td>
        </tr>
    </table>
</div>
<div class="container">
    <div class="container col-sm-8">

        @if (Model.products.Count > 0)
        {
            foreach (ElectricalAppliancesStore.Models.Product currProduct in Model.products)
            {
                <div class="itemContainer">
                    <div id="Item_@(currProduct.ID)" class="itembox" style="background-image:url(@currProduct.PicturePath)">
                        <div class="selectionbar">
                            <input type="button" class="control plus" value="+" onclick="updateItemAmount(@currProduct.ID, 'Add', '@currProduct.Title', @currProduct.SalePrice)">
                            <input type="text" id="@(currProduct.ID)_amount" class="control number" value="0" onchange="updateItemAmount(@currProduct.ID, 'Change', '@currProduct.Title', @currProduct.SalePrice)" />
                            <input type="button" class="control minus" value="-" onclick="updateItemAmount(@currProduct.ID, 'Sub', '@currProduct.Title', @currProduct.SalePrice)" />
                        </div>
                    </div>
                    <br />
                    <p>@Html.DisplayFor(modelItem => currProduct.Title)</p>
                    <p>@Html.DisplayFor(modelItem => currProduct.SalePrice)₪</p>
                </div>
            }
        }
    </div>
    <h4 class="text-center">Shopping Cart:</h4>
    <div class="shoppingList container col-sm-3">
        <div class="container col-sm-7 text-info">
            Product
        </div>
        <div class="container col-sm-3 text-info">
            Quantity
        </div>
        <div class="container col-sm-1 text-info">
            Price
        </div>
        <br /><br />
    </div>
    <div class="container col-sm-3">
        <br />
        <input type="submit" value="Procced To Checkout" onclick="checkout()" class="btn btn-success my-2 my-sm-0" />
    </div>
</div>

<div class="container col-md-12"></div>


<script type="text/javascript">

    var quantityByProductId = {};

    function updateItemAmount(itemId, action, title, salePrice) {
        // Get curr item amount
        var currAmount = Number(document.getElementById(itemId + '_amount').value);

        // update amount based on action clicked
        if (action == "Add") {
            currAmount++;
        }
        else if (action == "Sub") {
            currAmount--;
        }

        // validate amount before updateing order amount
        if (currAmount < 0) {
            alert("Amount for order cannot be less the zero.");

            // chenge amount to zero
            currAmount = 0;
        }
        else if (currAmount > 5) {
            alert("You are allowed to order up to 5 items, of the type, in one order.");

            // change amount to 5
            currAmount = 5;
        }

        AddOrUpdate(itemId, currAmount, title, salePrice);

        // Update display
        document.getElementById(itemId + '_amount').value = currAmount;

    }

    function Add(itemId, quantity, title, salePrice) {

        $(".shoppingList").append(GetDiv(itemId, quantity, title, salePrice));
    }

    function AddOrUpdate(itemId, itemQuantity, title, salePrice) {

        var isExists = false;
        id = ".shoppingList #" + itemId;

        if($(id).length != 0)
        {
            if(itemQuantity == 0)
            {
                Remove(itemId);
                quantityByProductId[itemId] = undefined;
            }
            else
            {
                Update(itemId, itemQuantity, salePrice);
                quantityByProductId[itemId] = itemQuantity;
            }
        }
        else
        {
            Add(itemId, itemQuantity, title, salePrice);
            quantityByProductId[itemId] = itemQuantity;
        }
    }

    function Update(itemId, quantity, salePrice) {
        id = ".shoppingList #" + itemId;

        ChangeTextByClass(id, ".quantity", quantity);
        ChangeTextByClass(id, ".fixedPrice", (quantity * salePrice));
    }

    function ChangeTextByClass(id, classValue, textValue) {
        var $this = $(id).children(classValue);
        $this.text(textValue);
    }

    function Remove(itemId) {

        var id = ".shoppingList #" + itemId;
        $(id).remove();
    }

    function GetDiv(itemId, quantity, title, salePrice)
    {
        return ("<div id='" + itemId + "'> <div class='container col-sm-8'>" +
                    title +
                "</div>" +
                "<div class='container col-sm-2 quantity'>" +
                    quantity +
                "</div>" +
                "<div class='container col-sm-2 fixedPrice'>" +
                    (quantity * salePrice) +
                "</div> </div>");
    }

    function checkout()
    {
        $.post({
            url: '@Url.Action("CheckOut","ProductView")',
            data: { orderItems: JSON.stringify(quantityByProductId) ,
                clientID: @Model.currOrder.ClientID }
        }).done(function(result){
            window.location.href = result;
        });
    }

</script>


<script>
    $(document).ready(function()
    {
        $.ajax({
            url: "/Manager/GetCategories",
            success: function(data) {
                $.each(data, function(i, item) {
                    var url = "/ProductView/ProductsByCategory" + "?userID=" + @Model.currOrder.ClientID + "&category=" + item.ID;
                    var query = "<a href=\"" + url +"\"/>";

                    $('<li>').append(
                    $(query).text(item.Category)).appendTo('#drop1');
                });
            }
        });

        $.ajax({
            url: "/Manager/GetBestSellerItemThisMonth",
            success: function(data) {
                var item = "#Item_" + data.ID;
                $('<div>').append(
                   $('<h2>').text("Prodcut Of The Month")).appendTo(item);
            }
        });

        $.ajax({
            url: '@Url.Action("GetCategories", "Manager")',
            success: function (data) {
                $.each(data, function (i, item) {
                    var opt = document.createElement("option");
                    opt.value = item.Category;
                    opt.innerHTML = item.Category;

                    // then append it to the select element
                    document.getElementById('categories').appendChild(opt);

                });
            }
        });
        $.ajax({
            url: '@Url.Action("GetBrands", "Manager")',
            success: function (data) {
                $.each(data, function (i, item) {
                    var opt = document.createElement("option");
                    opt.value = item.Brand;
                    opt.innerHTML = item.Brand;

                    // then append it to the select element
                    document.getElementById('brands').appendChild(opt);
                });
            }
        });
    });

    function advOnIndexCall() {
        debugger;
        var maxPrice = document.getElementById('max_price').value;
        var categories = document.getElementById("categories");
        var category = categories.options[categories.selectedIndex].value;
        var brands = document.getElementById("brands");
        var brand = brands.options[brands.selectedIndex].value;
        $('#advSearchLink').attr('href', '@Url.Action("ProductsByCategoryBrandAndMaxPrice", "ProductView")' + '?category=' + category + '&brand=' + brand + '&maxPrice=' + maxPrice + '&userID=' + @Model.currOrder.ClientID);
    }
</script>